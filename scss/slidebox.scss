$slideboxColorDefaultColor: blue !default;
$slideboxClassPrefix: '' !default;

$spacing: 0.8em;

$slideboxShadowFilter: drop-shadow(0 0 4px rgba(black, 0.5));

@mixin dark-filters() {

  &::after {
    filter: brightness(130%) $slideboxShadowFilter;
  }
}

@mixin dark-colors() {
  &::before {
    color: lighten(grey, 50%);
  }

  &::after {
    color: lighten(grey, 40%);
  }
}

@mixin light-filters() {
  &::before {
    filter: brightness(70%);
  }
}

@mixin light-colors() {
  &::before {
    color: lighten(grey, 50%);
  }

  &::after {
    color: lighten(#444444, 70%);
  }
}

@mixin slideboxRight($extraTransform: null) {
  -webkit-transform: translateX(calc(50% - #{$spacing / 2})) $extraTransform;
  transform: translateX(calc(50% - #{$spacing / 2})) $extraTransform;
}


@mixin slideboxLeft($extraTransform: null) {
  -webkit-transform: translateX(calc(-50% + #{$spacing / 2})) $extraTransform;
  transform: translateX(calc(-50% + #{$spacing / 2})) $extraTransform;
}


@mixin slideboxStart($extraTransform: null) {
  @at-root :not([dir=rtl]) & {
    @include slideboxLeft($extraTransform);
  }
  @at-root [dir=rtl] & {
    @include slideboxRight($extraTransform);
  }
}

@mixin slideboxEnd($extraTransform: null) {
  @at-root :not([dir=rtl]) & {
    @include slideboxRight($extraTransform);
  }
  @at-root [dir=rtl] & {
    @include slideboxLeft($extraTransform);
  }
}



@mixin slideboxToStartAnimation() {
  @at-root :not([dir=rtl]) & {
    animation-name: slideboxToLeft;
  }
  @at-root [dir=rtl] & {
    animation-name: slideboxToRight;
  }
}

@mixin slideboxToEndAnimation() {
  @at-root :not([dir=rtl]) & {
    animation-name: slideboxToRight;
  }
  @at-root [dir=rtl] & {
    animation-name: slideboxToLeft;
  }
}

input[type=checkbox].#{$slideboxClassPrefix}slidebox {
  -webkit-appearance: none !important;
  -moz-appearance: none !important;
  -ms-appearance: none !important;
  -o-appearance: none !important;
  appearance: none !important;
  height: auto;
  width: auto;
  line-height: 0px;
  position: relative;
  color: $slideboxColorDefaultColor;
  outline: 0 !important;
  cursor: pointer;
  padding: 0 #{$spacing / 2};
  font-size: 1em;
  transform-origin: center center;

  &:focus::after {
    outline: auto 5px -webkit-focus-ring-color;
  }

  &::before {
    direction: ltr;
    position: absolute;
    content: '\f111\f111\f111\f111\f111\f111\f111';
    font-weight: 900;
    font-family: 'Font Awesome 5 Free';
    display: block;
    letter-spacing: -$spacing;
    margin-left: $spacing * 0.5;
    left: 50%;
    top: 50%;
    transform-origin: center center;
    -webkit-transform: translate(-50%, -50%) scale(0.8);
    transform: translate(-50%, -50%) scale(0.8);
    width: #{$spacing * 4};
  }

  &::after {
    line-height: 1em;
    position: relative;
    content: '\f111';
    font-weight: 900;
    padding: #{$spacing / 2};
    font-family: 'Font Awesome 5 Free';
    display: block;
    transform-origin: center center;
    animation-duration: 0.2s;
    animation-timing-function: cubic-bezier(0.68, -0.6, 0.32, 1.6);
    animation-fill-mode: forwards;
    filter: $slideboxShadowFilter;
  }

  &::before, &::after {
    transition: color 0.2s ease-in-out;
  }

  &:not(.inverted) {
    &::after {
      @include slideboxToEndAnimation;
    }

    &.dark {
      @include dark-colors;
      @include dark-filters;
    }

    &.light {
      @include light-colors;
      @include light-filters;
    }

    @if (lightness($slideboxColorDefaultColor) > 40) {
      @include light-colors;
      @include light-filters;
    } @else {
      @include dark-colors;
      @include dark-filters;
    }

    &:checked {
      &::before, &::after {
        color: inherit;
      }

      &::after {
        @include slideboxToStartAnimation;
      }
    }

    &:active {
      &:checked::after {
        @include slideboxStart(scale(1.1) !important);
      }

      &:not(:checked)::after {
        @include slideboxEnd(scale(1.1) !important);
      }
    }
  }


  &.inverted {
    &::before, &::after {
      color: inherit;
    }

    &::after {
      @include slideboxToStartAnimation;
    }

    &.dark {
      @include dark-filters;
    }

    &.light {
      @include light-filters;
    }

    @if (lightness($slideboxColorDefaultColor) > 40) {
      @include light-filters;
    } @else {
      @include dark-filters;
    }

    &:checked {
      &::after {
        @include slideboxToEndAnimation;
      }

      &.dark {
        @include dark-colors;
      }

      &.light {
        @include light-colors;
      }

      @if (lightness($slideboxColorDefaultColor) > 40) {
        @include light-colors;
      } @else {
        @include dark-colors;
      }

    }

    &:active {
      &:checked::after {
        @include slideboxEnd(scale(1.1) !important);
      }

      &:not(:checked)::after {
        @include slideboxStart(scale(1.1) !important);
      }
    }
  }

}

@keyframes slideboxToLeft {
  from {
    @include slideboxRight;
  }
  to {
    @include slideboxLeft;
  }
}

@keyframes slideboxToRight {
  from {
    @include slideboxLeft;
  }
  to {
    @include slideboxRight;
  }
}
